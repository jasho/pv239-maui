// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace PV239_05_Storage.Core.Api
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for ApiClient.
    /// </summary>
    public static partial class ApiClientExtensions
    {
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static IList<TodoItemDtoInner> TodoGetAllItems(this IApiClient operations)
            {
                return operations.TodoGetAllItemsAsync().GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<TodoItemDtoInner>> TodoGetAllItemsAsync(this IApiClient operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.TodoGetAllItemsWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse<IList<TodoItemDtoInner>> TodoGetAllItemsWithHttpMessages(this IApiClient operations, Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.TodoGetAllItemsWithHttpMessagesAsync(customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            public static TodoItemDtoInner TodoGetItem(this IApiClient operations, System.Guid id)
            {
                return operations.TodoGetItemAsync(id).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<TodoItemDtoInner> TodoGetItemAsync(this IApiClient operations, System.Guid id, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.TodoGetItemWithHttpMessagesAsync(id, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse<TodoItemDtoInner> TodoGetItemWithHttpMessages(this IApiClient operations, System.Guid id, Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.TodoGetItemWithHttpMessagesAsync(id, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='title'>
            /// </param>
            /// <param name='isCompleted'>
            /// </param>
            /// <param name='type'>
            /// Possible values include: '0', '1'
            /// </param>
            public static void TodoInsertItem(this IApiClient operations, System.Guid? id = default(System.Guid?), string title = default(string), bool? isCompleted = default(bool?), string type = default(string))
            {
                operations.TodoInsertItemAsync(id, title, isCompleted, type).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='title'>
            /// </param>
            /// <param name='isCompleted'>
            /// </param>
            /// <param name='type'>
            /// Possible values include: '0', '1'
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task TodoInsertItemAsync(this IApiClient operations, System.Guid? id = default(System.Guid?), string title = default(string), bool? isCompleted = default(bool?), string type = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.TodoInsertItemWithHttpMessagesAsync(id, title, isCompleted, type, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='title'>
            /// </param>
            /// <param name='isCompleted'>
            /// </param>
            /// <param name='type'>
            /// Possible values include: '0', '1'
            /// </param>
            /// <param name='customHeaders'>
            /// Headers that will be added to request.
            /// </param>
            public static AzureOperationResponse TodoInsertItemWithHttpMessages(this IApiClient operations, System.Guid? id = default(System.Guid?), string title = default(string), bool? isCompleted = default(bool?), string type = default(string), Dictionary<string, List<string>> customHeaders = null)
            {
                return operations.TodoInsertItemWithHttpMessagesAsync(id, title, isCompleted, type, customHeaders, CancellationToken.None).ConfigureAwait(false).GetAwaiter().GetResult();
            }

    }
}
